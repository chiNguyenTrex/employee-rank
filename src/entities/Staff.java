package entities;
// Generated Apr 26, 2017 3:11:57 PM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.DecimalMin;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotBlank;

/**
 * Staff generated by hbm2java
 */
@Entity
@Table(name = "staff", catalog = "personal")
public class Staff implements java.io.Serializable {
	private String staffId;
	private Depart depart;
	private String name;
	private boolean gender;
	private Date birthday;	
	private String photo;
	private String email;
	private String phone;
	
	@DecimalMin(value = "0", message = "Salary is invalid")
	private Double salary;
	private String note;
	private Set<Record> records = new HashSet<Record>(0);

	public Staff() {
	}

	public Staff(String staffId, String name, boolean gender, Date birthday, String email, Double salary) {
		this.staffId = staffId;
		this.name = name;
		this.gender = gender;
		this.birthday = birthday;
		this.email = email;
		this.salary = salary;
	}

	public Staff(String staffId, Depart depart, String name, boolean gender, Date birthday, String photo, String email,
			String phone, Double salary, String note, Set<Record> records) {
		this.staffId = staffId;
		this.depart = depart;
		this.name = name;
		this.gender = gender;
		this.birthday = birthday;
		this.photo = photo;
		this.email = email;
		this.phone = phone;
		this.salary = salary;
		this.note = note;
		this.records = records;
	}

	@Id
	@Column(name = "StaffId", unique = true, nullable = false, length = 10)
	public String getStaffId() {
		return this.staffId;
	}

	public void setStaffId(String staffId) {
		this.staffId = staffId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DepartId")
	public Depart getDepart() {
		return this.depart;
	}

	public void setDepart(Depart depart) {
		this.depart = depart;
	}

	@Column(name = "Name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Gender", nullable = false)
	public boolean isGender() {
		return this.gender;
	}

	public void setGender(boolean gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Birthday", nullable = false, length = 19)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "Photo", length = 50)
	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	@Column(name = "Email", nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "Salary", nullable = false, precision = 22, scale = 0)
	public Double getSalary() {
		return this.salary;
	}

	public void setSalary(Double salary) {
		this.salary = salary;
	}

	@Column(name = "Note")
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staff")
	public Set<Record> getRecords() {
		return this.records;
	}

	public void setRecords(Set<Record> records) {
		this.records = records;
	}


}
